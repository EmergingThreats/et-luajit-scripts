--
--Generic CVE-2012-4681--
--
-- Chris Wakelin
-- Will Metcalf

require("zip")

function init (args)
    local needs = {}
    needs["http.response_body"] = tostring(true)
    return needs
end

function match(args)
    local t = tostring(args["http.response_body"])
    local rtn = 0
    local match_cnt = 0

    -- Store our jar to the fs should probably use tmpfs or something
    local tmpname = os.tmpname()
    local tmp = io.open(tmpname,'w')
    tmp:write(t)
    tmp:close()
    
    --Open our jar file
    local z = zip.open(tmpname)
    local strings2find = {'sun.awt.SunToolkit', 'getField','forName','setSecurityManager'}

    --Open each file in the zip and inspect it 
    if z then 
        for w in z:files() do
            local f = z:open(w.filename);
            local t = f:read("*all")
            f:close()

            -- Is this a class file? If not we don't want to inspect more
            if string.find(t,"^\xca\xfe\xba\xbe") then
                -- Find our Evil strings
                for n,m in pairs(strings2find) do
                    -- Do a non-regex match "plain" match for our strings
                    local fnd = string.find(t,m,1,true) 
                    if fnd then
                        match_cnt = match_cnt + 1
                    else
                        -- One of our strings failed to match bail and return
                        rtn = 0 
                        break
                    end
                end
                --If we have match_cnt == 4 here we have a match for all strings and this crap is probably evil.
                if match_cnt == 4 then
                    rtn = 1
                    break
                end
            end
        end
    -- Close out our zip
    z:close()
    end
    -- Remove the tmpfile
    os.remove(tmpname)
    return rtn
end
